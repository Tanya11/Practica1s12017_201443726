/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package edd.practica1_201443726;

import ListaCircular.ListaCircular;
import ListaCircular.Nodo;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;

/**
 *
 * @author Usuario
 */
public class InterfazJuego extends javax.swing.JFrame {

    /**
     * Creates new form InterfazJuego
     */
    public InterfazJuego() {
        initComponents();
        ListaCircular jugadores = new ListaCircular();
        Nodo nodoJuego= new Nodo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setText("Lista Jugadores");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jButton2)
                .addContainerGap(423, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jButton2)
                .addContainerGap(341, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        GraficarJugadores();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazJuego().setVisible(true);
            }
        });
    }
    
   public void GraficarJugadores(){
          File file1;
                FileWriter escribirarchivo;
                BufferedWriter bufferw;
                PrintWriter imprimirescrito;
                String nombre = "listaJugadores.dot";
                                try {
                file1=new File(nombre);
                escribirarchivo=new FileWriter(file1);
                bufferw=new BufferedWriter(escribirarchivo);
                imprimirescrito=new PrintWriter(bufferw);
                                		
		imprimirescrito.write("digraph ListaS{\n");
                imprimirescrito.append("label= \"Lista simple\"\n");
                imprimirescrito.append("\tnode [fontcolor=\"red\", height=0.5, color=\"black\"]\n");
                imprimirescrito.append("\tedge [color=\"black\", dir=fordware]\n");
                Recorrer(imprimirescrito);                
		imprimirescrito.append("\n}");
		imprimirescrito.close();
                imprimirescrito.close();
                    try {
                        ProcessBuilder pbuilder;
                        
                        pbuilder = new ProcessBuilder("dot","listaJugadores.dot", "-Tpng", "-o", "listaJugadores.png");                        
                        pbuilder.redirectErrorStream(true);
                        pbuilder.start();                        
                    } catch (Exception e) {
                    }		
            } catch (Exception e) {
            } 
   } 
   public final void Recorrer(PrintWriter escribirarchivo){
        Nodo nodito = new Nodo();        
       String texto;
        if( nodito!=null){
            while( nodito!=null){
            texto="nodo"+ nodito.getNombre()+"[label=\"-> "+nodito.getNombre()+ "-> " + nodito.getNombre() + "\"];\n";
            escribirarchivo.append(texto);                                           
            
            if(nodito.getSiguiente()!=null)
				{
                                    texto="->"+nodito.getNombre()+"->"+nodito.getNombre()+";\n";
                                    escribirarchivo.append(texto);					
				}
            nodito=nodito.getSiguiente();            
        }
   
        }
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
